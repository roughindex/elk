input {
    beats {
        port => "5044"
    }
}
# The filter is optional. Documentation appears in
# https://www.elastic.co/guide/en/logstash/current/working-with-plugins.html
#
# filter {
# This grok filter assumes that a standard Apache httpd row appears in the message field
# and separates the values into distinct fields. See https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html
#    grok {
#        match => { "message" => "%{COMBINEDAPACHELOG}"}
#    }
#
# Consider in particular:
#   cidr filter to tag with friendly subnet names https://www.elastic.co/guide/en/logstash/7.13/plugins-filters-cidr.html
#   elapsed time filter for Business Activity Monitoring https://www.elastic.co/guide/en/logstash/7.13/plugins-filters-elapsed.html
#   drop filter can be used to remove debug and trace events in production (by default), which are more likely to contain data and/or to overwhelm the ELK service https://www.elastic.co/guide/en/logstash/current/plugins-filters-drop.html
#}
output {
    elasticsearch {
        hosts => [ "elastic:9200" ]
        index => "%{[@metadata][beat]}-%{[@metadata][version]}"
    }
}
